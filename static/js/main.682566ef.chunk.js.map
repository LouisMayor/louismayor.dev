{"version":3,"sources":["logo.svg","components/music/music.tsx","components/floating-nav-bar/floating-nav-bar.tsx","components/hello-section/hello-section.tsx","components/project-tile/project-tile.tsx","components/projects-section/projects-section.tsx","enums.tsx","components/image-tile/image-tile.tsx","components/skill-section/skill-section.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Music","audioClip","url","volume","loop","muted","controls","playing","FloatingNavBar","id","className","activeClass","to","spy","smooth","offset","duration","HelloSection","empty","ProjectTile","platformString","name","desc","platforms","image","src","length","TestPerElement","TileGridLayout","ProjectsSection","ImageTile","alt","SkillSection","MultiPageExample","path","logo","tileLayout","Horizontal","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.682566ef.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { FunctionComponent } from 'react';\nimport ReactPlayer from 'react-player'\n\ntype MusicProps = {\n  audioClip: string\n};\n\nexport const Music: FunctionComponent<MusicProps> = ({audioClip}) => <aside>\n  <div>Music Player - {audioClip}</div>\n  <ReactPlayer \n      url={audioClip}\n      volume={0.25}\n      loop={true}\n      muted={true}\n      controls={true}\n      playing={true}\n  />\n</aside>\n\nexport default Music;","import React, { FunctionComponent } from 'react';\nimport { Link } from \"react-scroll\";\n\ntype FloatingNavBarProps = {\n//\n};\n\n/*  Custom nav bar icons\n    https://stackoverflow.com/questions/22617280/how-to-add-own-icons-in-bootstrap-navbar/22618064\n*/\n\nexport const FloatingNavBar: FunctionComponent<FloatingNavBarProps> = ({}) => {\n    return (\n    <section id=\"nav-bar\">\n      <nav className=\"navbar navbar-expand navbar-inverse navbar-fixed-top flex-nowrap flex-row\">\n        <div className=\"navbar-collapse collapse\">\n          <ul className=\"nav navbar-nav flex-row\">\n            <li>\n              <Link\n              activeClass=\"active\"\n              to=\"header\"\n              spy={true}\n              smooth={true}\n              offset={0}\n              duration={500}\n              >\n              Home\n              </Link>\n            </li>\n            <li>\n              <Link\n              activeClass=\"active\"\n              to=\"projects\"\n              spy={true}\n              smooth={true}\n              offset={0}\n              duration={500}\n              >\n              Projects\n              </Link>\n            </li>\n            <li>\n              <Link\n              activeClass=\"active\"\n              to=\"skills\"\n              spy={true}\n              smooth={true}\n              offset={0}\n              duration={500}\n              >\n              Skills\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </section>);\n}\n\nexport default FloatingNavBar;\n","import React, { FunctionComponent } from 'react';\nimport logo from '../../logo.svg';\nimport '../../App.css'\n\ntype HelloSectionProps = {\n  empty: boolean;\n};\n\nexport const HelloSection: FunctionComponent<HelloSectionProps> = ({empty}) =>\n{\n  if (empty)\n  {\n    return (<div/>)\n  }\n  return (\n    <section id=\"header\">\n      <div className=\"header\">\n        <div className=\"header_inner\">\n          <div className=\"header-welcome\"> Welcome </div>\n          <div className=\"header_parallax\">\n          {/*<img src={logo} className=\"header_inner_logo\" alt=\"logo\" />*/}\n          <div>\n            <div className=\"header-aboutme-title\"> About Me! </div>\n            <div className=\"header-aboutme-body\">\n            <br></br>\n            Hi, my name is Louis\n            <br></br>\n            <br></br>\n            I am a First class honours graduate, I primarily work with C++, and\n            have a keen interest in Computer Graphics\n            </div>\n          </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default HelloSection;\n","import React, { FunctionComponent } from 'react';\n\ntype ProjectTileProps = {\n  empty: boolean;\n  name: string;\n  desc: string;\n  platforms: string;\n  image: string;\n};\n\nfunction ReleasedOn(platformString: string): string {\n  if (platformString.length === 0) {\n    return \"\";\n  }\n  return \"Released on \" + platformString;\n}\n\nexport const ProjectTile: FunctionComponent<ProjectTileProps> = ({empty, name, desc, platforms, image}) => {\n  if (empty)\n  {\n    return (<div/>)\n  }\n  return <div className=\"project-tile\">\n    <div className=\"project-image-tile\">\n      <img className=\"project-image\" src={image}/>\n    </div>\n    <div className=\"project-desc-tile\">\n        <b>{name}</b>\n        <br/>\n        {desc}\n        <br/>\n        {ReleasedOn(platforms)}\n     </div>\n  </div>;\n}\n\nexport default ProjectTile;\n","import React, { FunctionComponent } from 'react';\nimport ProjectTile from '../project-tile'\nimport {TileGridLayout} from '../../enums';\n\ntype ProjectsSectionProps = {\n  empty: boolean;\n  tileLayout: TileGridLayout;\n};\n\nfunction TestProElement(): JSX.Element {\n  return<ProjectTile\n  empty={false}\n  name=\"Some Project\"\n  desc=\"dfsjfhfhsdjfhisdifdjsifids gjfgjdfjigj gjid jgijd ijgijdhgijfigj jigfjgi jgi ojgikfjgijfd gjifj jgifdjgifjdg jhgidjifgj ghh hgjh gjfigj ojigjdifjg ijgifjgif\"\n  platforms=\"PC, Xbox One, Playstation 4 and Nintendo Switch\"\n  image=\"assets/imgs/inner_bg.png\"\n  />\n}\n\nfunction TestPerElement(): JSX.Element {\n  return<ProjectTile\n  empty={false}\n  name=\"Some Project\"\n  desc=\"dfsjfhfhsdjfhisdifdjsifids gjfgjdfjigj gjid jgijd ijgijdhgijfigj jigfjgi jgi ojgikfjgijfd gjifj jgifdjgifjdg jhgidjifgj ghh hgjh gjfigj ojigjdifjg ijgifjgif\"\n  platforms=\"\"\n  image=\"assets/imgs/inner_bg.png\"\n  />\n}\n\nconst container_pro: string = \"project-pro-tile-container\";\nconst container_per: string = \"project-per-tile-container\";\n\nexport const ProjectsSection: FunctionComponent<ProjectsSectionProps> = ({empty}) => {\n  if (empty)\n  {\n    return (<div/>)\n  }\n  return (\n    <section id=\"projects\">\n      <div className=\"projects\">\n        <div className=\"projects-pro\"> Professional Projects </div>\n        <div className={container_pro}>\n          <ProjectTile \n          empty={false}\n          name=\"Sackboy\"\n          desc=\"Sackboy: A Big Adventure is an upcoming platform game developed by Sumo Digital and published by Sony Interactive Entertainment for the PlayStation 5. Part of the LittleBigPlanet series.\"\n          platforms=\"Playstation 4 and 5\"\n          image=\"assets/imgs/professional/sackboy.jpg\"\n          />\n          <ProjectTile\n          empty={false}\n          name=\"Battletoads\"\n          desc=\"The wait is over! Rash, Zitz and Pimple are returning at last to smash-hit their way through an all-new action-packed adventure of choreographed chaos, and couch co-op may never be the same again.\"\n          platforms=\"Xbox One, Windows Store and Steam\"\n          image=\"assets/imgs/professional/battletoads.jpeg\"\n          />\n          <ProjectTile\n          empty={false}\n          name=\"Two Point Hospital\"\n          desc=\"Design stunning hospitals, cure peculiar illnesses and manage troublesome staff as you spread your budding healthcare organisation across Two Point County.\"\n          platforms=\"PC, Xbox One, Playstation 4 and Nintendo Switch\"\n          image=\"assets/imgs/professional/tph.jpg\"\n          />\n        </div>\n        <div className=\"projects-per\"> Personal Projects </div>\n        <div className={container_per}>\n          {TestPerElement()}\n          {TestPerElement()}\n          {TestPerElement()}\n        </div>\n      </div>\n      </section>\n  )\n}\n\nexport default ProjectsSection;","export enum TileGridLayout {\r\n    Horizontal,\r\n    Vertical\r\n}","import React, { FunctionComponent } from 'react';\n\ntype ImageTileProps = {\n  image: string;\n  alt: string;\n};\n\nexport const ImageTile: FunctionComponent<ImageTileProps> = ({image, alt}) => {\n  return (\n    <div>\n      <div className=\"skills-row-tile\">\n        <img className=\"skill-image\" src={image} alt={alt}/>\n      </div>\n      <div className=\"skill-sub-text\">\n        <b>{alt}</b>\n      </div>\n    </div>\n  );\n}\n\nexport default ImageTile;","import React, { FunctionComponent } from 'react';\nimport ImageTile from '../image-tile';\n\ntype SkillSectionProps = {\n  empty: boolean;\n};\n\nexport const SkillSection: FunctionComponent<SkillSectionProps> = ({empty}) => {\n  if (empty)\n  {\n    return (<div/>)\n  }\n  return (\n  <section id=\"skills\">\n    <div className=\"skills\">\n      <div className=\"skills-title\"> Skills </div>\n      <div className=\"skills-row-container\">\n        <div className=\"skills-row-title\">\n          <b>Languages</b>\n        </div>\n        <div className=\"skills-row-grid\">\n          <ImageTile alt=\"C++\"        image=\"assets/imgs/logos/iso cplusplus.png\"/>\n          <ImageTile alt=\"C#\"         image=\"assets/imgs/logos/csharp.png\"/>\n          <ImageTile alt=\"HLSL\"       image=\"assets/imgs/logos/HLSL-Logo.png\"/>\n          <ImageTile alt=\"GLSL\"       image=\"assets/imgs/logos/GLSL-Logo.png\"/>\n          <ImageTile alt=\"Typescript\" image=\"assets/imgs/logos/typescript.png\"/>\n        </div>\n      </div>\n      <div className=\"skills-row-container\">\n        <div className=\"skills-row-title\">\n          <b>Engines/APIs</b>\n        </div>\n        <div className=\"skills-row-grid\">\n          <ImageTile alt=\"Unreal Engine 4\"  image=\"assets/imgs/logos/unrealengine.png\"/>\n          <ImageTile alt=\"Unity\"            image=\"assets/imgs/logos/unity engine.png\"/>\n          <ImageTile alt=\"Vulkan\"           image=\"assets/imgs/logos/vulkan.png\"/>\n          <ImageTile alt=\"DirectX 11\"       image=\"assets/imgs/logos/directx11.png\"/>\n          <ImageTile alt=\"Git\"              image=\"assets/imgs/logos/git.png\"/>\n        </div>\n      </div>\n    </div>\n  </section>\n  );\n}\n\nexport default SkillSection;\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport Music from './components/music'\nimport FloatingNav from './components/floating-nav-bar'\nimport HelloSection from './components/hello-section'\nimport ProjectSection from './components/projects-section'\nimport SkillsSection from './components/skill-section'\nimport {TileGridLayout} from './enums';\nimport logo from './logo.svg';\nimport './App.css';\n\n/* References\n  http://www.mollyjameson.com\n  http://hugo.fyi/#\n  http://leah-lindner.com/\n  http://www.joshcaratelli.com/\n  https://nielsbrunekreef.com/#competencies\n*/\n\nfunction MusicSyncExample(): JSX.Element {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Welcome to my secret lair. You Shouldn't Be Here! \n        </p>\n        <Music audioClip=\"assets/audio/drone.wav\"/>\n      </header>\n    </div>\n  );\n}\n\nfunction BasicPage(): JSX.Element {\n  return (\n    <div>\n      <HelloSection empty={false}/>\n    </div>\n  );\n}\n\nfunction ExtendedBasicPage(): JSX.Element {\n  return (\n    <div>\n      <FloatingNav/>\n      <HelloSection empty={false}/>\n    </div>\n    );\n}\n\nfunction TwoPage(): JSX.Element {\n  return (\n    <div>\n      <FloatingNav/>\n      <HelloSection empty={false}/>\n      <ProjectSection empty={false} tileLayout={TileGridLayout.Horizontal}/>\n    </div>\n    );\n}\n\nfunction ThreePage(): JSX.Element {\n  return (\n    <div>\n      <FloatingNav/>\n      <HelloSection empty={false}/>\n      <ProjectSection empty={false} tileLayout={TileGridLayout.Horizontal}/>\n      <SkillsSection empty={false}/>\n    </div>\n    );\n}\n\nfunction MultiPageExample(): JSX.Element {\n  return (\n    <div>\n      <Router>\n        <Switch>\n          <Route path=\"/music\">\n            {MusicSyncExample()}\n          </Route>\n          <Route path=\"/\">\n            <FloatingNav/>\n            <HelloSection empty={false}/>\n            <ProjectSection empty={false} tileLayout={TileGridLayout.Horizontal}/>\n            <SkillsSection empty={false}/>\n          </Route>\n        </Switch>\n      </Router>\n    </div>\n    );\n}\n\nfunction App(): JSX.Element {\n  return (MultiPageExample());\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}